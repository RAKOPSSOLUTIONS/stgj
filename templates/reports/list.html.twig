{% extends 'layout/admin.html.twig' %}

{% block body %}
<div class="row">
    <div class="col-sm-12">
        <h1 class="page-name">
            <i class="bi bi-clipboard-data"></i>
            {{ "Rapports"|trans }}
        </h1>
    </div>
</div>

<div class="row mt-3">
    {% for report in reports %}
        <div class="col-lg-3 col-md-3 col-sm-6 mb-4">
            <div class="card shadow-sm rounded-0 h-100">
                <div class="card-body d-flex flex-column align-items-center p-3">
                    <i class="bi bi-file-earmark-text fs-1 text-primary mb-2"></i>
                    <span class="fs-6 text-uppercase text-center font-weight-bold">{{ report.label }}</span>
                    
                    {% if report.report_category == 'date_interval' %}
                        <form 
                            method="get" 
                            action="{{ path('generate_report', { reportType: report.type }) }}" 
                            target="_blank" 
                            class="mt-3 w-100"
                            aria-label="Date interval report form for {{ report.label }}"
                            id="reportForm_{{ report.type }}"
                        >
                            <div class="mb-2">
                                <label for="display_startAt_{{ report.type }}" class="form-label">Date début:</label>
                                <input 
                                    type="text" 
                                    id="display_startAt_{{ report.type }}" 
                                    class="form-control datepicker" 
                                    required 
                                    aria-required="true"
                                    placeholder="jj/mm/aaaa"
                                >
                                <!-- Hidden field for the backend format -->
                                <input 
                                    type="hidden" 
                                    id="startAt_{{ report.type }}" 
                                    name="startAt"
                                >
                            </div>
                            <div class="mb-3">
                                <label for="display_endAt_{{ report.type }}" class="form-label">Date Fin :</label>
                                <input 
                                    type="text" 
                                    id="display_endAt_{{ report.type }}" 
                                    class="form-control datepicker" 
                                    required 
                                    aria-required="true"
                                    placeholder="jj/mm/aaaa"
                                >
                                <!-- Hidden field for the backend format -->
                                <input 
                                    type="hidden" 
                                    id="endAt_{{ report.type }}" 
                                    name="endAt"
                                >
                            </div>
                            <div class="d-flex gap-2 w-100">
                                <button type="submit" class="btn btn-primary w-50">Télécharger</button>
                                <button 
                                    type="button" 
                                    class="btn btn-secondary w-50 preview-btn" 
                                    data-report-type="{{ report.type }}" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#previewModal"
                                    id="previewBtn_{{ report.type }}"
                                    disabled
                                >
                                    Aperçu
                                </button>
                            </div>
                        </form>

                        <!-- Initialize Flatpickr for this specific report -->
                        <script>
                        document.addEventListener('DOMContentLoaded', function() {
                            const displayStartAt = document.getElementById('display_startAt_{{ report.type }}');
                            const displayEndAt = document.getElementById('display_endAt_{{ report.type }}');
                            const startAt = document.getElementById('startAt_{{ report.type }}');
                            const endAt = document.getElementById('endAt_{{ report.type }}');
                            const previewBtn = document.getElementById('previewBtn_{{ report.type }}');
                            const form = document.getElementById('reportForm_{{ report.type }}');

                            // Initialize Flatpickr with French locale and dd/mm/yyyy format
                            const startDatePicker = flatpickr(displayStartAt, {
                                dateFormat: "d/m/Y",
                                locale: "fr",
                                allowInput: true,
                                onChange: function(selectedDates, dateStr) {
                                    // Convert to yyyy-mm-dd for backend
                                    if (selectedDates.length > 0) {
                                        const date = selectedDates[0];
                                        const formattedDate = date.getFullYear() + '-' + 
                                                             String(date.getMonth() + 1).padStart(2, '0') + '-' + 
                                                             String(date.getDate()).padStart(2, '0');
                                        startAt.value = formattedDate;
                                        checkDates();
                                    }
                                }
                            });

                            const endDatePicker = flatpickr(displayEndAt, {
                                dateFormat: "d/m/Y",
                                locale: "fr",
                                allowInput: true,
                                onChange: function(selectedDates, dateStr) {
                                    // Convert to yyyy-mm-dd for backend
                                    if (selectedDates.length > 0) {
                                        const date = selectedDates[0];
                                        const formattedDate = date.getFullYear() + '-' + 
                                                             String(date.getMonth() + 1).padStart(2, '0') + '-' + 
                                                             String(date.getDate()).padStart(2, '0');
                                        endAt.value = formattedDate;
                                        checkDates();
                                    }
                                }
                            });

                            function checkDates() {
                                if (startAt.value && endAt.value) {
                                    previewBtn.disabled = false;
                                } else {
                                    previewBtn.disabled = true;
                                }
                            }

                            // Handle form submission
                            form.addEventListener('submit', function(event) {
                                if (!startAt.value || !endAt.value) {
                                    event.preventDefault();
                                    alert('Veuillez sélectionner les dates de début et de fin.');
                                }
                            });
                        });
                        </script>
                    {% else %}
                        <div class="mt-auto w-100 d-flex gap-2">
                            <a 
                                href="{{ path('generate_report', { reportType: report.type }) }}" 
                                class="btn btn-primary w-50" 
                                target="_blank" 
                                aria-label="Download {{ report.label }}"
                            >
                                Télécharger
                            </a>
                            <button 
                                type="button" 
                                class="btn btn-secondary w-50 preview-btn" 
                                data-report-type="{{ report.type }}" 
                                data-bs-toggle="modal" 
                                data-bs-target="#previewModal"
                            >
                                Aperçu
                            </button>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        
        {% if loop.index % 4 == 0 and not loop.last %}
            </div><div class="row mt-3">
        {% endif %}
    {% endfor %}
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">Aperçu du Rapport</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="report-preview-content" class="text-center">
                    <p>Chargement...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>

<!-- Include required CSS and JS for Flatpickr -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/fr.js"></script>
{% endblock %}

{% block footer %}
  {{ parent() }}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
        const previewButtons = document.querySelectorAll('.preview-btn');
        const previewContent = document.getElementById('report-preview-content');

        previewButtons.forEach(button => {
            button.addEventListener('click', () => {
                const reportType = button.getAttribute('data-report-type');
                const formId = `reportForm_${reportType}`;
                let url = `/generate-report/${reportType}?preview=true`;
                
                // For date interval reports, add the date parameters
                const form = document.getElementById(formId);
                if (form) {
                    const startAt = form.querySelector('[name="startAt"]');
                    const endAt = form.querySelector('[name="endAt"]');
                    if (startAt && startAt.value && endAt && endAt.value) {
                        url += `&startAt=${encodeURIComponent(startAt.value)}&endAt=${encodeURIComponent(endAt.value)}`;
                    }
                }

                // Call the preview endpoint via AJAX
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        // Render preview content (Example: table of data)
                        let html = '<table class="table table-striped"><thead><tr>';
                        data.headers.forEach(header => {
                            html += `<th>${header}</th>`;
                        });
                        html += '</tr></thead><tbody>';
                        data.rows.forEach(row => {
                            html += '<tr>';
                            data.headers.forEach(header => {
                                html += `<td>${row[header.toLowerCase()] || ''}</td>`;
                            });
                            html += '</tr>';
                        });
                        html += '</tbody></table>';
                        previewContent.innerHTML = html;
                    })
                    .catch(error => {
                        previewContent.innerHTML = `<p class="text-danger">Erreur lors du chargement de l'aperçu.</p>`;
                        console.error('Error fetching preview:', error);
                    });
            });
        });
    });
  </script>
{% endblock %}