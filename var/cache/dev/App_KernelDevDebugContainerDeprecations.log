a:57:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:369:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SecurityFactoryInterface::getKey()" might add "string" as a native return type declaration in the future. Do the same in implementation "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:118:"C:\Users\lamfa\Bureau\stgja\vendor\hwi\oauth-bundle\DependencyInjection\Security\Factory\OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:374:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\SecurityFactoryInterface::getPosition()" might add "string" as a native return type declaration in the future. Do the same in implementation "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:118:"C:\Users\lamfa\Bureau\stgja\vendor\hwi\oauth-bundle\DependencyInjection\Security\Factory\OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:369:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AbstractFactory::createAuthProvider()" might add "string" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:118:"C:\Users\lamfa\Bureau\stgja\vendor\hwi\oauth-bundle\DependencyInjection\Security\Factory\OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:368:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AbstractFactory::createEntryPoint()" might add "?string" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:118:"C:\Users\lamfa\Bureau\stgja\vendor\hwi\oauth-bundle\DependencyInjection\Security\Factory\OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:364:"Method "Symfony\Bundle\SecurityBundle\DependencyInjection\Security\Factory\AbstractFactory::getListenerId()" might add "string" as a native return type declaration in the future. Do the same in child class "HWI\Bundle\OAuthBundle\DependencyInjection\Security\Factory\OAuthFactory" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:118:"C:\Users\lamfa\Bureau\stgja\vendor\hwi\oauth-bundle\DependencyInjection\Security\Factory\OAuthAuthenticatorFactory.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "App\Command\LinkCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "App\Command\MailCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\AnnonceSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\CategorySearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\MarqueSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\ModeleSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:287:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\NavetteSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\PickupSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\ReclamationSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:298:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\ReservationEntriesSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:291:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\ReservationSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\ShiftSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\SiteSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:285:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\TarifSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:286:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\TrajetSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:284:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\UserSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:16384;s:7:"message";s:288:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Form\Search\VehiculeSearchType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:16384;s:7:"message";s:228:"The "KnpU\OAuth2ClientBundle\Security\Authenticator\SocialAuthenticator" class extends "Symfony\Component\Security\Guard\AbstractGuardAuthenticator" that is deprecated since Symfony 5.3, use the new authenticator system instead.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:63:"C:\Users\lamfa\Bureau\stgja\src\Security\AzureAuthenticator.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Security\AzureAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:299:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getCredentials()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Security\AzureAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:16384;s:7:"message";s:301:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getUser()" might add "?UserInterface" as a native return type declaration in the future. Do the same in implementation "App\Security\AzureAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:26;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "App\Security\AzureAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:27;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationFailure()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "App\Security\AzureAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:28;a:6:{s:4:"type";i:16384;s:7:"message";s:314:"Method "Symfony\Component\Security\Http\EntryPoint\AuthenticationEntryPointInterface::start()" might add "Response" as a native return type declaration in the future. Do the same in implementation "App\Security\AzureAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:29;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"The "App\Security\LoginFormAuthenticator" class extends "Symfony\Component\Security\Guard\Authenticator\AbstractFormLoginAuthenticator" that is deprecated since Symfony 5.3, use the new authenticator system instead.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:30;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:31;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getCredentials()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:32;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getUser()" might add "?UserInterface" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:33;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::checkCredentials()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:34;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:35;a:6:{s:4:"type";i:16384;s:7:"message";s:320:"Method "Symfony\Component\Security\Guard\Authenticator\AbstractFormLoginAuthenticator::getLoginUrl()" might add "string" as a native return type declaration in the future. Do the same in child class "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:36;a:6:{s:4:"type";i:16384;s:7:"message";s:126:"Since symfony/security-bundle 5.3: The child node "encoders" at path "security" is deprecated, use "password_hashers" instead.";s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-bundle\DependencyInjection\MainConfiguration.php";s:4:"line";i:54;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:84:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Definition\Builder\ExprBuilder.php";s:4:"line";i:239;s:8:"function";s:59:"Symfony\Bundle\SecurityBundle\DependencyInjection\{closure}";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\MainConfiguration";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:37;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"Method "Symfony\Component\Security\Core\User\UserInterface::getSalt()" might add "?string" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:688;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:38;a:6:{s:4:"type";i:16384;s:7:"message";s:232:"Since symfony/security-bundle 5.3: Configuring an encoder for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "App\Entity\User" should implement it.";s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:689;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:190;s:8:"function";s:14:"createEncoders";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:39;a:6:{s:4:"type";i:16384;s:7:"message";s:239:"Since symfony/security-bundle 5.3: Configuring a password hasher for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "App\Entity\User" should implement it.";s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:804;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:194;s:8:"function";s:13:"createHashers";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:40;a:6:{s:4:"type";i:16384;s:7:"message";s:332:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "BOMO\IcalBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:41;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead.";s:4:"file";s:97:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:97:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:42;a:6:{s:4:"type";i:16384;s:7:"message";s:174:"Since symfony/security-guard 5.3: The "Symfony\Component\Security\Guard\Authenticator\GuardBridgeAuthenticator" class is deprecated, use the new authenticator system instead.";s:4:"file";s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-guard\Authenticator\GuardBridgeAuthenticator.php";s:4:"line";i:35;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:290;s:4:"args";a:1:{i:0;s:100:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-guard\Authenticator\GuardBridgeAuthenticator.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:43;a:6:{s:4:"type";i:16384;s:7:"message";s:224:"The "Symfony\Bridge\Doctrine\Logger\DbalLogger" class implements "Doctrine\DBAL\Logging\SQLLogger" that is deprecated Use {@see \Doctrine\DBAL\Logging\Middleware} or implement {@see \Doctrine\DBAL\Driver\Middleware} instead.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:85:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:44;a:6:{s:4:"type";i:16384;s:7:"message";s:275:"Since symfony/dependency-injection 5.1: The "Symfony\Component\DependencyInjection\ContainerInterface" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it. It is being referenced by the "App\Repository\MailHistoryRepository" service.";s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:45;a:6:{s:4:"type";i:16384;s:7:"message";s:292:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the "App\Security\LoginFormAuthenticator" service.";s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:46;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the ".service_locator.tXM58lC" service.";s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:47;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the ".service_locator.PeIkZgO" service.";s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:48;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the ".service_locator.h1xhtcK" service.";s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:68;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:107:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:51;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:49;a:6:{s:4:"type";i:16384;s:7:"message";s:214:"Since symfony/security-core 5.4: Passing the access decision strategy as a string is deprecated, pass an instance of "Symfony\Component\Security\Core\Authorization\Strategy\AccessDecisionStrategyInterface" instead.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:96:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-core\Authorization\AccessDecisionManager.php";s:4:"line";i:75;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:50;a:6:{s:4:"type";i:16384;s:7:"message";s:167:"Since symfony/security-core 5.4: The $autenticationManager argument of "Symfony\Component\Security\Core\Authorization\AuthorizationChecker::__construct" is deprecated.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:95:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\security-core\Authorization\AuthorizationChecker.php";s:4:"line";i:38;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:51;a:6:{s:4:"type";i:16384;s:7:"message";s:166:"The "Symfony\Bridge\Twig\NodeVisitor\TranslationNodeVisitor" class extends "Twig\NodeVisitor\AbstractNodeVisitor" that is deprecated since 3.9 (to be removed in 4.0).";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:301;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:52;a:6:{s:4:"type";i:16384;s:7:"message";s:179:"The "Symfony\Bridge\Twig\NodeVisitor\TranslationDefaultDomainNodeVisitor" class extends "Twig\NodeVisitor\AbstractNodeVisitor" that is deprecated since 3.9 (to be removed in 4.0).";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:301;s:8:"function";s:10:"checkClass";s:5:"class";s:47:"Symfony\Component\ErrorHandler\DebugClassLoader";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:53;a:6:{s:4:"type";i:16384;s:7:"message";s:148:"Since twig/twig 3.15: Using the "deprecated", "deprecating_package", and "alternative" options is deprecated, pass a "deprecation_info" one instead.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:73:"C:\Users\lamfa\Bureau\stgja\vendor\twig\twig\src\AbstractTwigCallable.php";s:4:"line";i:51;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:54;a:6:{s:4:"type";i:16384;s:7:"message";s:219:"Since twig/twig 3.15: Add explicit parentheses around the "??" binary operator to avoid behavior change in the next major version as its precedence will change in "@WebProfiler/Collector/notifier.html.twig" at line 141.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:69:"C:\Users\lamfa\Bureau\stgja\vendor\twig\twig\src\ExpressionParser.php";s:4:"line";i:170;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:55;a:6:{s:4:"type";i:16384;s:7:"message";s:169:"Since twig/twig 3.12: Twig Filter "spaceless" is deprecated in C:\Users\lamfa\Bureau\stgja\vendor\php-http\httplug-bundle\src\Resources\views\stack.html.twig at line 10.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:75:"C:\Users\lamfa\Bureau\stgja\vendor\twig\twig\src\DeprecatedCallableInfo.php";s:4:"line";i:65;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:56;a:6:{s:4:"type";i:16384;s:7:"message";s:81:"Since twig/twig 3.9: Using the internal "twig_test_empty" function is deprecated.";s:4:"file";s:77:"C:\Users\lamfa\Bureau\stgja\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:67:"C:\Users\lamfa\Bureau\stgja\vendor\twig\twig\src\Resources\core.php";s:4:"line";i:382;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:17;}}